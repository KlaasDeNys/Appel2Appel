package node;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Observable;
import java.util.Observer;

import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class NodeGui extends JFrame implements ActionListener, Observer {
	private static final long serialVersionUID = 1L;
	private HashMap <String, YPanel> panelMap;
	private JPanel mainPanel;

	public NodeGui () {
		super("System Y");
		setBounds (100,100,450,300);
		mainPanel = new JPanel ();
		mainPanel.setLayout (new BoxLayout ( mainPanel, BoxLayout.PAGE_AXIS));
		add(mainPanel);
		mainPanel.add(new YPanel("Klaas", true));
		mainPanel.add(new YPanel("Manu", false));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		panelMap = new HashMap <String,YPanel> ();
	}
	
	
	public boolean addFile (String fileName, boolean local) {
		if(panelMap.containsKey(fileName)) {
			System.out.println("Failed to add panel " + fileName + ".");
			return false;
		}
		YPanel panel = new YPanel (fileName, local);
		panelMap.put(fileName, panel);
		System.out.println("Panel " + fileName + " is added to the gui.");
		mainPanel.add(panelMap.get(fileName));
		return true;
	}

	public void update(Observable o, Object arg) {
		mainPanel.updateUI();
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		System.out.println("Inside actionPerformed()");
		
	}
}
